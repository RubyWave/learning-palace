<?php

namespace Palace\Blocks;


/**
 * Registration of a <%- blockData.name %> block
 */
class <%- blockData.pascalCaseSlug %>Block {
    const SLUG = '<%- blockData.slug %>';
    const HANDLE_JS = '<%- blockData.slug %>-block-scripts';
    const HANDLE_CSS = '<%- blockData.slug %>-block-styles';

    private $title;
    private $description;
    private $icon;
    private $keywords;


    /**
     * Actions to register block
     */
    public function __construct() {

        //in case ACF Pro is not installed, or page is using old version
        if ( ! function_exists( 'acf_register_block_type' ) ) {
			return;
		}

        $this->title          = esc_attr__( '<%- blockData.name %> block', 'palace-blocks' );
        $this->description    = esc_attr__( '<%- blockData.description %>', 'palace-blocks' );
        $this->icon           = 'admin-comments'; // dash-icon icon
        $this->keywords       = [ '<%- blockData.slug %> <%- blockData.name %>' ];

        add_action( 'wp_enqueue_scripts', [ $this, 'registerStylesAndScript' ] );
        add_action( 'acf/init', [ $this, 'registerACFBlock' ] );
    }

    /**
     * Register ACF block
     *
     */
    public function registerACFBlock() {
        acf_register_block_type( [
            'name'            => self::SLUG,
            'keywords'        => $this->keywords,
            'icon'            => $this->icon,
            'title'           => $this->title,
            'description'     => $this->description,
            'render_callback' => [ $this, 'renderTemplate' ],
            'enqueue_assets'  => function () {
                wp_enqueue_style( self::HANDLE_CSS );
                <% if (blockData.JSincluded === true) { %>
                wp_enqueue_script( self::HANDLE_JS );
                <% } else { %>
                // wp_enqueue_script( self::HANDLE_JS ); // to include JS, uncoment this line and line in registerStylesAndScript function
                <% } %>
            },
            // 'example'  => [
            //     'attributes' => [
            //         'mode' => 'preview',
            //         'data' => [
            //             'preview_image_help' => get_template_directory_uri() . '/img/blocks/'.self::SLUG.'-preview.jpg',
            //             "is_preview"         => true
            //         ],
            //     ],
            // ],
            'supports' => [
                'align'  => true,
                'mode'   => true,
                'jsx'    => true,
                'anchor' => true
            ],
        ] );
    }

    /**
     * Register styles and scripts
     *
     */
    public function registerStylesAndScript() {
        wp_register_style( self::HANDLE_CSS, get_template_directory_uri() . '/dist/block_' . self::SLUG . '.css' );
        <% if (blockData.JSincluded === true) { %>
        wp_register_script( self::HANDLE_JS , get_template_directory_uri() . '/dist/block_' . self::SLUG  .'.bundle.js');
        <% } else { %>
        // to include JS, uncoment line below and line in enqueue_assets in block registration
        // wp_register_script( self::HANDLE_JS , get_template_directory_uri() . '/dist/block_' . self::SLUG  .'.bundle.js');
        <% } %>
    }

    


    /**
     * Set data and render template
     *
     *
     */
    public function renderTemplate($blockArgs) {
        $args = $blockArgs;

        // unique ID created out of Gutenberg ID and slug. If anchor is provied in Gutenberg, it replaces ID
        $args['id'] = self::SLUG . '-' . $blockArgs['id'];
        if ( !empty( $blockArgs['anchor'] ) ) {
            $args['id'] = $blockArgs['anchor'];
        }

        // Gutenberg extra class
        $args['className'] =  '';
        if ( ! empty( $blockArgs['className'] ) ) {
            $args['className'] .= ' ' . esc_attr( $blockArgs['className'] );
        }

        // Gutenberg set aligment
        if ( !empty($blockArgs['align'] ) ) {
            $args['className'] .= ' align' . esc_attr( $blockArgs['align'] );
        }

        get_template_part('blocks/' . self::SLUG . '/' . self::SLUG, '', $args);
    }
}
